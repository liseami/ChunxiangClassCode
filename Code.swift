//// 原始 SwiftUI 代码
//struct ContentView: View {
//    var body: some View {
//        Text("Hello")
//    }
//}
//
//// 编译后的ARM64机器码示例（十六进制表示）
//// 注意：这是简化的示例，实际机器码会更复杂
//
//0x0000: FF 83 00 D1   // SUB SP, SP, #0x30        ; 调整栈指针
//0x0004: FD 7B 01 A9   // STP x29, x30, [SP, #16]  ; 保存帧指针和返回地址
//0x0008: FD 43 00 91   // ADD x29, SP, #16         ; 设置新的帧指针
//0x000C: BF C3 1F B8   // STUR wzr, [x29, #-4]     ; 初始化局部变量
//0x0010: A0 83 1F F8   // STUR x0, [x29, #-8]      ; 存储self参数
//0x0014: E1 0F 00 94   // BL _swift_allocObject    ; 分配View对象内存
//0x0018: E0 03 00 AA   // MOV x0, x0               ; 移动对象引用
//0x001C: 21 00 80 52   // MOV w1, #1               ; 设置参数
//0x0020: 02 01 80 52   // MOV w2, #8               ; 设置参数
//0x0024: E3 03 00 AA   // MOV x3, x0               ; 准备方法调用
//0x0028: E4 03 40 F9   // LDR x4, [sp, #0]         ; 加载字符串地址
//0x002C: 00 00 00 94   // BL _setText              ; 调用setText方法
//0x0030: FD 7B 41 A9   // LDP x29, x30, [SP, #16]  ; 恢复帧指针和返回地址
//0x0034: FF 83 00 91   // ADD SP, SP, #0x30        ; 恢复栈指针
//0x0038: C0 03 5F D6   // RET                      ; 返回
//
//// 数据段
//0x1000: 48 65 6C 6C   // "Hell"  ; Text字符串的ASCII码
//0x1004: 6F 00 00 00   // "o\0"   ; 字符串结束符


//0x0000: 11110111 10000011 00000000 11010001 (FF 83 00 D1) // SUB SP, SP, #0x30      ; 调整栈指针
//        [操作码] [目标寄存器] [源寄存器] [立即数]
//
//0x0004: 11111101 01111011 00000001 10101001 (FD 7B 01 A9) // STP x29, x30, [SP, #16] ; 保存帧指针和返回地址
//        [操作码] [寄存器对] [基址寄存器] [偏移量]
//
//0x0008: 11111101 01000011 00000000 10010001 (FD 43 00 91) // ADD x29, SP, #16       ; 设置新的帧指针
//        [操作码] [目标寄存器] [源寄存器] [立即数]
//
//0x000C: 10111111 11000011 00011111 10111000 (BF C3 1F B8) // STUR wzr, [x29, #-4]   ; 初始化局部变量
//        [操作码] [源寄存器] [基址寄存器] [偏移量]
